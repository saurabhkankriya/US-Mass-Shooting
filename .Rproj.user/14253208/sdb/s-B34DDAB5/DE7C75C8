{
    "collab_server" : "",
    "contents" : "#Libraries used:\nlibrary(tibble) \nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(stringr)\n#install.packages(\"ggmap\")\nlibrary(ggmap)\n#install.packages(\"revgeocode\")\n\nmass.shootings<-read.csv(\"Mass Shootings Dataset Ver 2.csv\", \n                         stringsAsFactors = FALSE)\n\nView(mass.shootings)\n\n#Changing \"Date\" column cass to data:\nmass.shootings$Date <- mdy(mass.shootings$Date)\n\n#Changing \"Mental.Health.Issues\", \"Race\", \"Gender\" columns' classes to factors:\ncols_to_factors<-c(\"Mental.Health.Issues\", \"Race\", \"Gender\")\nmass.shootings[,cols_to_factors]<-lapply(mass.shootings[,cols_to_factors],\n                                         as.factor)\n\n\nlevels(mass.shootings$Gender)\n\n\n#Standardizing levels \nlevels(mass.shootings$Gender)[levels(mass.shootings$Gender)==\"M\"] <- \"Male\"\nlevels(mass.shootings$Gender)[levels(mass.shootings$Gender)==\"F\"] <- \"Female\"\nlevels(mass.shootings$Gender)[levels(mass.shootings$Gender)==\"M/F\"] <- \"Male/Female\"\nlevels(mass.shootings$Gender)[levels(mass.shootings$Gender)==\"\"] <- \"Unknown\"\n\n\nlevels(mass.shootings$Gender)\ntable(mass.shootings$Gender)\nnlevels(mass.shootings$Gender)\nsum(table(mass.shootings$Gender))==nrow(mass.shootings)\nplot(mass.shootings$Gender)\n\n\n#Race\nlevels(mass.shootings$Race)\n\nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"\"]<-\"Unknown\"\nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"black\"\n                           |levels(mass.shootings$Race)==\"Black\"]<-\"Black American or African American\"\n\nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"white\"\n                            |levels(mass.shootings$Race)==\"white\"\n                            |levels(mass.shootings$Race)==\"White\"\n                            |levels(mass.shootings$Race)==\"White \"]<-\"White American or European American\"\n\nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"Some other race\"]<-\"Other\"                           \nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"unclear\"]<-\"Unknown\"                           \nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"Native American\"]<-\"Native American or Alaska Native\"\nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"Asian American/Some other race\"\n                            |levels(mass.shootings$Race)==\"White American or European American/Some other Race\"]<-\"Two or more races\"\nlevels(mass.shootings$Race)[levels(mass.shootings$Race)==\"Asian\"\n                            |levels(mass.shootings$Race)==\"Asian American\"]<-\"Asian or Asian American\"\n\ntable(mass.shootings$Race)\n\n\n#Mental Health Issues:\nlevels(mass.shootings$Mental.Health.Issues)\n\nlevels(mass.shootings$Mental.Health.Issues)[levels(mass.shootings$Mental.Health.Issues)==\"Unclear \"\n                                            |levels(mass.shootings$Mental.Health.Issues)==\"Unclear\"\n                                            |levels(mass.shootings$Mental.Health.Issues)==\"unknown\"]<-\"Unknown\"\nlevels(mass.shootings$Mental.Health.Issues)\ntable(mass.shootings$Mental.Health.Issues)\nplot(mass.shootings$Mental.Health.Issues)\n\n\n#Separating Location to \"City\" and \"State\"\nhead(mass.shootings$Location, n=20)\nmass.shootings2 <- separate(mass.shootings, \n                            Location, \n                            c(\"City\", \"State\"), \n                            sep = \",\", remove=FALSE) \n# (remove=FALSE meaning: Let's not remove the \"Location\" column yet)\nView(mass.shootings2)\n\nmass.shootings2[c(144, 173, 222, 238), c(\"Location\", \"City\", \"State\")]\n\nmass.shootings2 <- separate(mass.shootings, Location, c(\"City\", \"State\"), sep = \",(?=[^,]+$)\", remove=FALSE)\nmass.shootings2[c(144, 173, 222, 238), c(\"Location\", \"City\", \"State\")]\n\n#If Location is NA, how many unique values are there\nunique((mass.shootings2[is.na(mass.shootings2$State),\n                        c(\"Location\", \"City\", \"State\")])[,1])\n\ndc_i<-which(mass.shootings2$Location==\"Washington D.C.\")\nmass.shootings2$City[dc_i]<-strsplit(mass.shootings2$Location[dc_i], \" \")[[1]][[1]]\nmass.shootings2$State[dc_i]<-strsplit(mass.shootings2$Location[dc_i], \" \")[[1]][[2]]\n\nsum(mass.shootings2$Location==\"\")\n\n#5 DEALING WITH THE MISSING STATES\nsum(is.na(mass.shootings2$State))\n\n\n#Subsetting the Title, Location, City, State, Latitude and Longitude for missing states only:\nmiss_states <-mass.shootings2[is.na(mass.shootings2$State),\n                              c(\"Title\", \"Location\", \"City\", \"State\", \"Latitude\", \"Longitude\")]\nmiss_states\n\n\n#Deriving State names from Latitude and Longitude\nmiss_states$Location <-NA\n\nrepeat {\n  for (i in 1:nrow(miss_states)) {\n    if (is.na(miss_states$Location[i])){\n      miss_states$Location[i] <- revgeocode(as.numeric(miss_states[i,c(\"Longitude\", \"Latitude\")]))\n      print(paste(\"missing data for\", sum(is.na(miss_states$Location)), \"rows\"))\n    } \n  }\n  if (sum(is.na(miss_states$Location))==0){break}\n}\n\nView(miss_states$Location)\n\nmass.shootings2$State <- as.character(mass.shootings2$State)\nsum(is.na(mass.shootings2$State))\nmatched<-match(miss_states$Title, mass.shootings2$Title)\nmatched\nmass.shootings2[matched, c(\"Location\", \"City\", \"State\")]\n\nmass.shootings2[matched, c(\"Location\", \"City\", \"State\")]<- miss_states[, c(\"Location\", \"City\", \"State\")]\nmass.shootings3<-mass.shootings2\n\n#state names need to be standardizes to further use them as factors\nmass.shootings3$State<-as.factor(mass.shootings3$State)\nlevels(mass.shootings3$State) #Need to erase blank spaces from the beginning and end of each state name\nmass.shootings3$State<-str_trim(mass.shootings3$State)\n\n#Creating a data frame of all states with abbreviations:\nst.codes<-data.frame(\n  state=(c(\"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT\", \"DC\", \"DE\", \"FL\", \"GA\",\n           \"HI\", \"IA\", \"ID\", \"IL\", \"IN\", \"KS\", \"KY\", \"LA\", \"MA\", \"MD\", \"ME\",\n           \"MI\", \"MN\", \"MO\", \"MS\",  \"MT\", \"NC\", \"ND\", \"NE\", \"NH\", \"NJ\", \"NM\",\n           \"NV\", \"NY\", \"OH\", \"OK\", \"OR\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\",\n           \"TX\", \"UT\", \"VA\", \"VT\", \"WA\", \"WI\", \"WV\", \"WY\")),\n  full=(c(\"alaska\",\"alabama\",\"arkansas\",\"arizona\",\"california\",\"colorado\",\n          \"connecticut\",\"district of columbia\",\"delaware\",\"florida\",\"georgia\",\n          \"hawaii\",\"iowa\",\"idaho\",\"illinois\",\"indiana\",\"kansas\",\"kentucky\",\n          \"louisiana\",\"massachusetts\",\"maryland\",\"maine\",\"michigan\",\"minnesota\",\n          \"missouri\",\"mississippi\",\"montana\",\"north carolina\",\"north dakota\",\n          \"nebraska\",\"new hampshire\",\"new jersey\",\"new mexico\",\"nevada\",\n          \"new york\",\"ohio\",\"oklahoma\",\"oregon\",\"pennsylvania\",\"puerto rico\",\n          \"rhode island\",\"south carolina\",\"south dakota\",\"tennessee\",\"texas\",\n          \"utah\",\"virginia\",\"vermont\",\"washington\",\"wisconsin\",\n          \"west virginia\",\"wyoming\")), stringsAsFactors = FALSE)\n\n# Standardizing state names using the data frame \"st.codes\":\nmatched_states<-match(mass.shootings3$State, st.codes$state)\nmatched_states\n\nmass.shootings3[which(!is.na(matched_states)), \"State\"]<-st.codes$full[match(mass.shootings3$State[which(!is.na(matched_states))], st.codes$state)]\nmass.shootings3$State<-tolower(mass.shootings3$State)\n\n#Adding the State Abbreviation column:\nmass.shootings3$State_Abbr <- sapply(mass.shootings3$State, function(x) st.codes$state[match(x, st.codes$full)])\n\nmass.shootings3[,c(\"State\", \"State_Abbr\")]<-lapply(mass.shootings3[,c(\"State\", \"State_Abbr\")], as.factor)\n\nfor (i in (which(is.na(mass.shootings4$Latitude) | is.na(mass.shootings4$Longitude)))){\n  a<-geocode(mass.shootings4$City[i], output=\"latlon\")\n  mass.shootings4$Latitude[i]<-a[1,1]\n  mass.shootings4$Longitude[i]<-a[1,2]\n}\n#if missing coordinates for some cities remain, run for loop again\nmass.shootings4[miss_states, c(\"Latitude\", \"Longitude\")] # Should show zero\n\n     ",
    "created" : 1507868606580.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3504915167",
    "id" : "DE7C75C8",
    "lastKnownWriteTime" : 1509352801,
    "last_content_update" : 1509352801391,
    "path" : "D:/Learning/Data Science/Kaggle/US Mass Shootings/anothercleaned.R",
    "project_path" : "anothercleaned.R",
    "properties" : {
        "tempName" : "Untitled4"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}